Description: Create a CodePipeline to include for base netowrk createion.

Parameters:
  GitHubAuthToken:
    Type: String
    Description: Github Auth token.
  UATApprovalEmail:
    Type: String
    Description: Email address to which UAT approval should be sent
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)"
    ConstraintDescription: Must be a valid email address. (e.g. name@example.com)
  ProdApprovalEmail:
    Type: String
    Description: Email address to which Prod approval should be sent
    AllowedPattern: "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)"
    ConstraintDescription: Must be a valid email address. (e.g. name@example.com)

Resources:
  ArtifactS3Bucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub "${AWS::Region}-${AWS::StackName}"
  UATTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
      -
        Endpoint:
          Ref: UATApprovalEmail
        Protocol: "email"
  ProdTopic:
    Type: "AWS::SNS::Topic"
    Properties:
      Subscription:
      -
        Endpoint:
          Ref: UATApprovalEmail
        Protocol: "email"
  DeployPipelineRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: DeployPipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "codepipeline.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /
      Policies:
      -
        PolicyName:
          Fn::Sub: CodePipeline-${AWS::StackName}-Policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "s3:DeleteObject"
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucket"
            - "s3:PutObject"
            - "s3:GetBucketPolicy"
            Resource:
            - Fn::Sub: arn:aws:s3:::${AWS::Region}-${AWS::StackName}
            - Fn::Sub: arn:aws:s3:::${AWS::Region}-${AWS::StackName}/*
          -
            Effect: "Allow"
            Action:
            - "sns:Publish"
            Resource:
            - Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${UATTopic}
            - Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${ProdTopic}
          -
            Effect: "Allow"
            Action:
            - "cloudformation:CreateChangeSet"
            - "cloudformation:CreateStack"
            - "cloudformation:CreateUploadBucket"
            - "cloudformation:DeleteStack"
            - "cloudformation:Describe*"
            - "cloudformation:List*"
            - "cloudformation:UpdateStack"
            - "cloudformation:ValidateTemplate"
            - "cloudformation:ExecuteChangeSet"
            Resource:
            - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Test-${AWS::StackName}*
            - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/UAT-${AWS::StackName}*
            - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Prod-${AWS::StackName}*
          -
            Effect: "Allow"
            Action:
            - "codebuild:StartBuild"
            - "codebuild:BatchGetBuilds"
            Resource:
            - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/BuildBaseNetwork-${AWS::StackName}
            - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/BuildBaseNetwork-${AWS::StackName}:*
            - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/ValidateBuildBaseNetwork-${AWS::StackName}
            - Fn::Sub: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/ValidateBuildBaseNetwork-${AWS::StackName}:*
          -
            Effect: "Allow"
            Action:
            - "iam:PassRole"
            Resource:
            - Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/CloudFormationRole-${AWS::StackName}

  CloudFormationRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CloudFormationRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "cloudformation.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /
      Policies:
      -
        PolicyName:
          Fn::Sub: CloudFormation-${AWS::StackName}-Policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "ec2:Describe*"
            - "ec2:CreateSecurityGroup"
            Resource:
            - "*"
          -
            Effect: "Allow"
            Action:
            - "s3:GetObject"
            - "s3:ListBucket"
            Resource:
            - Fn::Sub: arn:aws:s3:::${AWS::Region}-${AWS::StackName}
            - Fn::Sub: arn:aws:s3:::${AWS::Region}-${AWS::StackName}/*
  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName:
        Fn::Sub: CodeBuildRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        -
          Effect: "Allow"
          Principal:
            Service:
            - "codebuild.amazonaws.com"
          Action:
          - "sts:AssumeRole"
      Path: /service-role/
      Policies:
      -
        PolicyName:
          Fn::Sub: CloudBuild-${AWS::StackName}-Policy
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          -
            Effect: "Allow"
            Action:
            - "cloudformation:Get*"
            - "cloudformation:Describe*"
            - "cloudformation:List*"
            Resource:
            - Fn::Sub: arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/Test-${AWS::StackName}*
          -
            Effect: "Allow"
            Action:
            - "ec2:Describe*"
            - "cloudformation:ValidateTemplate"
            - "iam:Get*"
            - "iam:List*"
            - "logs:Describe*"
            - "logs:Get*"
            - "tag:Get*"
            Resource:
            - "*"
          -
            Effect: "Allow"
            Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
            Resource:
            - Fn::Sub: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*
          -
            Effect: "Allow"
            Action:
            - "s3:PutObject"
            - "s3:GetObject"
            - "s3:GetObjectVersion"
            - "s3:ListBucket"
            Resource:
            - Fn::Sub: arn:aws:s3:::codepipeline-${AWS::Region}-*
            - Fn::Sub: arn:aws:s3:::${AWS::Region}-${AWS::StackName}/*
            - Fn::Sub: arn:aws:s3:::${AWS::Region}-${AWS::StackName}
  BuildBaseNetworkProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: BuildBaseNetwork-${AWS::StackName}
      Description: Build to validate and copy CFN templates
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: CODEPIPELINE
        Name:
          Fn::Sub: BuildBaseNetwork-${AWS::StackName}
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:2.7.12
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 15
      Tags:
      - Key: Name
        Value:
          Fn::Sub: BuildBaseNetwork-${AWS::StackName}

  ValidateBaseNetworkProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: ValidateBuildBaseNetwork-${AWS::StackName}
      Description: validate created resources
      ServiceRole:
        Fn::GetAtt: [ CodeBuildRole, Arn ]
      Artifacts:
        Type: CODEPIPELINE
        Name:
          Fn::Sub: ValidateBaseNetwork-${AWS::StackName}
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:2.7.12
      Source:
        Type: CODEPIPELINE
        BuildSpec: test/buildspec-test.yml
      TimeoutInMinutes: 15
      Tags:
      - Key: Name
        Value:
          Fn::Sub: ValidateBaseNetwork-${AWS::StackName}

  DeployPipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      Name:
        Fn::Sub: DeployPipelineBaseNetwork-${AWS::StackName}
      RoleArn:
        Fn::GetAtt: [ DeployPipelineRole, Arn ]
      Stages:
      -
        Name: BaseNetworkCFNSource
        Actions:
        -
          Name: BaseNetworkCFNSource
          ActionTypeId:
            Version: "1"
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
          OutputArtifacts:
          -
            Name: BaseNetworkCFNTemplateOutput
          Configuration:
            OAuthToken: !Ref GitHubAuthToken
            Branch: master
            Repo: basenetwork
            Owner: aws-poc
          RunOrder: 1
        -
          Name: TestArtifactSource
          ActionTypeId:
            Version: "1"
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
          OutputArtifacts:
          -
            Name: TestArtifacts
          Configuration:
            OAuthToken: !Ref GitHubAuthToken
            Branch: master
            Repo: basenetwork
            Owner: aws-poc
          RunOrder: 1
      -
        Name: Validate
        Actions:
        -
          Name: CodeBuild
          InputArtifacts:
          - Name: BaseNetworkCFNTemplateOutput
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: 1
            Provider: CodeBuild
          OutputArtifacts:
          -
            Name: BaseNetworkCFNTemplateArtifact
          Configuration:
            ProjectName:
              Ref: BuildBaseNetworkProject
          RunOrder: 1
        -
          Name: CreateTestStack
          InputArtifacts:
          -
            Name: BaseNetworkCFNTemplateArtifact
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CloudFormation
          OutputArtifacts:
          -
            Name: CreatedTestStack
          Configuration:
            ActionMode: CREATE_UPDATE
            RoleArn:
              Fn::GetAtt: [ CloudFormationRole, Arn ]
            Capabilities: CAPABILITY_NAMED_IAM
            StackName:
              Fn::Sub: Test-${AWS::StackName}
            TemplateConfiguration: BaseNetworkCFNTemplateArtifact::config/test.json
            TemplatePath: BaseNetworkCFNTemplateArtifact::network.yml
          RunOrder: 2
        -
          Name: ValidateTestStack
          InputArtifacts:
          -
            Name: BaseNetworkCFNTemplateArtifact
          ActionTypeId:
            Category: Test
            Owner: AWS
            Version: 1
            Provider: CodeBuild
          OutputArtifacts:
          -
            Name: ValidatedTestStack
          Configuration:
            ProjectName:
              Ref: BuildBaseNetworkProject
          RunOrder: 3
        -
          Name: DeleteTestStack
          InputArtifacts:
          -
            Name: ValidatedTestStack
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CloudFormation
          OutputArtifacts:
          -
            Name: ProceedToUAT
          Configuration:
            StackName:
              Fn::Sub: Test-${AWS::StackName}
            ActionMode: DELETE_ONLY
            RoleArn:
              Fn::GetAtt: [ CloudFormationRole, Arn ]
          RunOrder: 4
      -
        Name: UAT
        Actions:
        -
          Name: CreateUATChangeSet
          InputArtifacts:
          -
            Name: BaseNetworkCFNTemplateArtifact
          -
            Name: ProceedToUAT
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CloudFormation
          OutputArtifacts:
          -
            Name: CreatedUATChangeSet
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            ChangeSetName: UATCBChangeSet
            RoleArn:
              Fn::GetAtt: [ CloudFormationRole, Arn ]
            Capabilities: CAPABILITY_NAMED_IAM
            StackName:
              Fn::Sub: UAT-${AWS::StackName}
            TemplateConfiguration: BaseNetworkCFNTemplateArtifact::config-uat.json
            TemplatePath: BaseNetworkCFNTemplateArtifact::master-stack.yml
          RunOrder: 1
        -
          Name: ExecuteUATChangeSet
          InputArtifacts:
          -
            Name: CreatedUATChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CloudFormation
          OutputArtifacts:
          -
            Name: DeployedUAT
          Configuration:
            ActionMode: CHANGE_SET_EXECUTE
            ChangeSetName: UATCBChangeSet
            StackName:
              Fn::Sub: UAT-${AWS::StackName}
          RunOrder: 2
        -
          Name: UATApproval
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Version: 1
            Provider: Manual
          Configuration:
            NotificationArn:
              Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${UATTopic}
            CustomData: Approve once UAT has been completed.
          RunOrder: 3
      -
        Name: Production
        Actions:
        -
          Name: CreateProdChangeSet
          InputArtifacts:
          -
            Name: BaseNetworkCFNTemplateArtifact
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CloudFormation
          OutputArtifacts:
          -
            Name: CreatedProdChangeSet
          Configuration:
            ActionMode: CHANGE_SET_REPLACE
            ChangeSetName: ProdCBChangeSet
            RoleArn:
              Fn::GetAtt: [ CloudFormationRole, Arn ]
            Capabilities: CAPABILITY_NAMED_IAM
            StackName:
              Fn::Sub: Prod-${AWS::StackName}
            TemplateConfiguration: BaseNetworkCFNTemplateArtifact::config-prod.json
            TemplatePath: BaseNetworkCFNTemplateArtifact::master-stack.yml
          RunOrder: 1
        -
          Name: ProdApproval
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Version: 1
            Provider: Manual
          Configuration:
            NotificationArn:
              Fn::Sub: arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${ProdTopic}
            CustomData: Approve deployment in production.
          RunOrder: 2
        -
          Name: DeployProduction
          InputArtifacts:
          -
            Name: CreatedProdChangeSet
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: 1
            Provider: CloudFormation
          Configuration:
            ActionMode: CHANGE_SET_EXECUTE
            ChangeSetName: ProdCBChangeSet
            StackName:
              Fn::Sub: Prod-${AWS::StackName}
          RunOrder: 3

      ArtifactStore:
        Type: S3
        Location: !Sub "${AWS::Region}-${AWS::StackName}"